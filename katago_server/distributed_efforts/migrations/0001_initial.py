# Generated by Django 3.0.1 on 2020-04-19 13:57

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import katago_server.contrib.validators
import katago_server.distributed_efforts.models.distributed_task.abstract_distributed_task


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('runs', '0001_initial'),
        ('games', '__first__'),
        ('trainings', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DynamicDistributedTaskConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('katago_config', models.TextField(default='FILL ME', help_text='The configuration file for katago to be given to client for selfplay', verbose_name='katago config')),
                ('probability_predefined_ranking_game', models.FloatField(default=0.5, help_text='If random() < probability, it will play ranking game (if any), else will play either predefined game, or dynamic one', verbose_name='probability of playing ranking game')),
                ('probability_predefined_training_game', models.FloatField(default=0.25, help_text='If random() < probability, it will play predefined game (if any), else will play dynamic one', verbose_name='probability of playing predefined game')),
            ],
            options={
                'verbose_name': 'Configuration: Katago config',
            },
        ),
        migrations.CreateModel(
            name='RankingGameDistributedTaskGeneratorConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability_high_elo', models.FloatField(default=0.4, help_text='Ranking (matches) games are high_elo game or big uncertainty game', verbose_name='ranking game probability of being high elo game')),
                ('ratio', models.FloatField(default=0.1, help_text='eg 0.1 means that for 10 of training games, there will be 1 match game', verbose_name='ranking game ration')),
            ],
            options={
                'verbose_name': 'Configuration: Parameters to schedule ranking matches',
            },
        ),
        migrations.CreateModel(
            name='TrainingGameDistributedTask',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('UNASSIGNED', 'Unassigned'), ('ONGOING', 'Ongoing'), ('DONE', 'Done'), ('CANCELED', 'Canceled')], db_index=True, default='UNASSIGNED', max_length=15, verbose_name='task status')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='creation date')),
                ('assigned_at', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='assignation date')),
                ('expire_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='expiration date')),
                ('initial_position_sgf_file', models.FileField(blank=True, null=True, upload_to=katago_server.distributed_efforts.models.distributed_task.abstract_distributed_task.upload_initial_to, validators=[katago_server.contrib.validators.FileValidator(magic_types=('Smart Game Format (Go)',), max_size=10485760)], verbose_name='initial position, as sgf file')),
                ('initial_position_extra_params', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True, verbose_name='initial position extra parameters')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='traininggamedistributedtask_games', to=settings.AUTH_USER_MODEL, verbose_name='assigned to')),
                ('black_network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='traininggamedistributedtask_predefined_jobs_as_black', to='trainings.Network', verbose_name='network black')),
                ('resulting_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='games.TrainingGame', verbose_name='resulting training game')),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='traininggamedistributedtask_predefined_jobs', to='runs.Run', verbose_name='run')),
                ('white_network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='traininggamedistributedtask_predefined_jobs_as_white', to='trainings.Network', verbose_name='network white')),
            ],
            options={
                'verbose_name': 'Task: Training game',
            },
        ),
        migrations.CreateModel(
            name='RankingEstimationGameDistributedTask',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('UNASSIGNED', 'Unassigned'), ('ONGOING', 'Ongoing'), ('DONE', 'Done'), ('CANCELED', 'Canceled')], db_index=True, default='UNASSIGNED', max_length=15, verbose_name='task status')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='creation date')),
                ('assigned_at', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='assignation date')),
                ('expire_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='expiration date')),
                ('initial_position_sgf_file', models.FileField(blank=True, null=True, upload_to=katago_server.distributed_efforts.models.distributed_task.abstract_distributed_task.upload_initial_to, validators=[katago_server.contrib.validators.FileValidator(magic_types=('Smart Game Format (Go)',), max_size=10485760)], verbose_name='initial position, as sgf file')),
                ('initial_position_extra_params', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True, verbose_name='initial position extra parameters')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rankingestimationgamedistributedtask_games', to=settings.AUTH_USER_MODEL, verbose_name='assigned to')),
                ('black_network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rankingestimationgamedistributedtask_predefined_jobs_as_black', to='trainings.Network', verbose_name='network black')),
                ('resulting_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='games.RankingEstimationGame', verbose_name='resulting ranking game')),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rankingestimationgamedistributedtask_predefined_jobs', to='runs.Run', verbose_name='run')),
                ('white_network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rankingestimationgamedistributedtask_predefined_jobs_as_white', to='trainings.Network', verbose_name='network white')),
            ],
            options={
                'verbose_name': 'Task: Ranking estimation game',
            },
        ),
    ]
